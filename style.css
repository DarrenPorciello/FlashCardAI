body {
    height: 100vh;
    margin: 0;
    background-color: #e3f8fb;
}

h1 {
    font-family: 'DM Serif Display', serif;
    font-size: 7vh;
}


.black {
    background-color: black;
    height: 8vh;
    width: 100%;
    display: block;
    margin-bottom: 3vh;
}


.input-container {
    position: relative;
    width: 80%;
    max-width: 400px;
}

textarea {
    width: 100%;
    padding: 15px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    resize: both; /* Disable textarea resizing */
    overflow: visible; /* Hide any overflowing content */
    min-height: 30vh;
    max-height: 60vh;
    transition: height 0.2s; /* Smoothly transition height changes */
}

/* Expand the textarea height as the content grows */
textarea:focus, textarea:not(:focus) {
    height: auto;
}

/* Add a subtle box shadow when focused */
textarea:focus {
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

.card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;
    padding: 0.5rem;
    justify-content: center;
    align-items: center;
}



.flashcard {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    box-shadow: 0 0 5px 2px rgba(0, 0, 0, .3);
    width: 300px;
    height: 180px;
    perspective: 1000px;
    cursor: pointer;
    background-color: transparent; /* Set the background to transparent */
    border-radius: .25rem;
    transform: perspective(1000px) rotateY(var(--rotate-y, 0))
    translateY(var(--translate-y, 0));
    transition: transform 0.5s, box-shadow 0.5s; /* Add box-shadow transition */
    box-shadow: 0 0 5px 2px transparent; /* Set the initial box-shadow to transparent */  
}

.flashcard:hover {
    --translate-y: -2px;
    box-shadow: 0 0 5px 2px rgba(0, 0, 0, .5); /* Add box-shadow on hover */
}

.card-content {
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform 0.5s;
    transform-origin: center;
    position: relative; /* Add this */
}

.flashcard.flipped .card-content {
    transform: rotateY(180deg);
}

.card-front,
.card-back {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    font-size: 18px;
    padding: 20px;
    border: 1px solid transparent; /* Set the border to transparent initially */
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    box-sizing: border-box; /* Add this */
    background-color: white;
    backface-visibility: hidden;
}

.card-back {
    transform: rotateY(180deg);
}

#loading {
    width: 4rem;
    height: 4rem;
    border: 5px solid #f3f3f3;
    border-top: 6px solid #170dc9;
    border-radius: 100%;
    margin: auto;
    display: none;
    animation: spin 1s infinite linear;
}

#loading.display {
    display: block;
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}